package kurs;
/*
1. Создать массив с набором слов (10-20 слов, должны встречаться повторяющиеся).
Найти и вывести список уникальных слов, из которых состоит массив (дубликаты не считаем).
Посчитать, сколько раз встречается каждое слово.
2. Написать простой класс Телефонный Справочник, который хранит в себе список фамилий и
телефонных номеров. В этот телефонный справочник с помощью метода add() можно добавлять записи,
а с помощью метода get() искать номер телефона по фамилии. Следует учесть, что под одной
фамилией может быть несколько телефонов (в случае однофамильцев), тогда при запросе такой
фамилии должны выводиться все телефоны.
*/
import java.util.*;

public class Main {

    private static final String[] WORDS = {"ангельская", "божественная", "безупречная",
            "жизнерадостная", "бескорыстная", "божественная", "весёлая", "великолепная", "безупречная",
            "завораживающая", "ангельская", "жизнерадостная", "восхитительная", "завораживающая",
            "волнительная", "грациозная", "добрая", "безупречная", "душевная", "ангельская",
            "божественная", "завораживающая", "дивная", "единственная", "желанная", "жизнерадостная",
            "заботливая", "загадочная", "божественная", "жизнерадостная", "завораживающая",
            "застенчивая", "зажигательная", "изысканная", "бесподобная", "завораживающая"};
    private static final Random random = new Random();

    public static void main(String[] args) {

        //используем именно TreeMap, чтобы было отсортировано по алфавиту
        Map<String, Integer> map = new TreeMap<>();
        for (String word: WORDS) {
            Integer count = map.get(word);
            map.put(word, 1 + (count == null ? 0 : count));
        }
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            System.out.printf("%s = %d\n", entry.getKey(), entry.getValue());
        }

        //телефонная книга
        PhoneBook phoneBook = new PhoneBook();
        //добавление
        for (int i = 0; i < 20; i++) {
            phoneBook.add(randomWord(), randomPhone());
        }
        //поиск телефонов по фамилии
        for (int i = 0; i < 10; i++) {
            phoneBook.get(randomWord());
        }
    }

    public static String randomWord() {
        return WORDS[random.nextInt(WORDS.length)];
    }

    public static String randomPhone() {
        return "" + (4950000000L + new Random().nextInt(10000000));
    }
}
